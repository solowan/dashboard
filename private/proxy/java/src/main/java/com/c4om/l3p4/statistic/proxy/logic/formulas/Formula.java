/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
package com.c4om.l3p4.statistic.proxy.logic.formulas;

import java.util.Map;

/**
 * This class is a superclass of the formulas of the system. A formula allow to manipulate the data received from the
 * collectors or data generated by others formulas. The constructor need a id and a boolean that indicates if the value
 * will be published or not in each step.
 *
 * To know how the formulas are resolved, consult the {@link com.c4om.l3p4.statistic.proxy.webSocket.client.ClientSocket#onWebSocketText}
 *
 * Created by Francisco Huertas on 2/09/15.
 */
public abstract class Formula {
    protected Boolean publish;
    protected String id;
    public Formula(String id, Boolean publish) {
        this.id = id;
        this.publish = publish;
    }

    /**
     * Resolve the formula using the previous solved formulas
     * @param solvedFormulas The formulas previously solved
     * @return Of the formula has been solved.
     */
    public abstract boolean solveFormula (Map<String,Formula> solvedFormulas);


    /**
     * Return the solution of the formula. If the formula is not solved, this method return null
     * @return The solution or null if the formula has not been solved
     */
    public abstract Object getResult ();

    /**
     * Return if the formula must be published
     * @return
     */
    public boolean isPublish(){
        return publish;
    }

    @Override
    public String toString(){
        return getResult().toString();
    }

    /**
     * Return the formula. Generally the result of this method is formula itself, but if some implementations return a
     * formula that stores instead itself. For example {@link com.c4om.l3p4.statistic.proxy.logic.formulas.implementations.PrevValue PrevValue} stores
     * a list of formulas and return the first formula received.
     *
     * @return
     */
    public Formula getFormula(){
        return this;
    }

}
